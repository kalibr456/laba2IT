public class TestEmployee {
    public static void main(String[] args) {
        Administrator admin = new Administrator("Alice", 35, 55000, "HR", "Senior Admin");
        Programmer programmer = new Programmer("Bob", 28, 75000, "Java", 5);
        Manager manager = new Manager("Charlie", 40, 85000, 10, "Project X");

        admin.displayInfo();
        programmer.displayInfo();
        manager.displayInfo();

        admin.increaseSalary(2000);
        programmer.increaseSalary(3000, 500);

        System.out.println("Total number of employees: " + Employee.getEmployeeCount());
    }
}
abstract class Employee {
    private String name;
    private int age;
    private double salary;
    private static int employeeCount = 0;

    public Employee() {
        this.name = "Unknown";
        this.age = 0;
        this.salary = 0;
        employeeCount++;
    }

    public Employee(String name, int age, double salary) {
        this.name = name;
        this.age = age;
        this.salary = salary;
        employeeCount++;
    }

    public abstract void displayInfo();

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public static int getEmployeeCount() {
        return employeeCount;
    }

    public void increaseSalary(double amount) {
        this.salary += amount;
        System.out.println("Salary increased by: " + amount);
    }

    public void increaseSalary(double amount, double bonus) {
        this.salary += (amount + bonus);
        System.out.println("Salary increased by: " + (amount + bonus) + " (including bonus)");
    }
}
class Administrator extends Employee {
    private String department;
    private String role;

    // Конструктор по умолчанию
    public Administrator() {
        super();
        this.department = "Unknown";
        this.role = "Admin";
    }

    public Administrator(String name, int age, double salary, String department, String role) {
        super(name, age, salary);
        this.department = department;
        this.role = role;
    }

    @Override
    public void displayInfo() {
        System.out.println("Administrator: " + getName() + ", Age: " + getAge() + ", Salary: " + getSalary() + ", Department: " + department + ", Role: " + role);
    }

    public String getDepartment() {
        return department;
    }

    public void setDepartment(String department) {
        this.department = department;
    }

    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }
}
class Programmer extends Employee {
    private String programmingLanguage;
    private int experienceYears;

    public Programmer() {
        super();
        this.programmingLanguage = "Unknown";
        this.experienceYears = 0;
    }

    public Programmer(String name, int age, double salary, String programmingLanguage, int experienceYears) {
        super(name, age, salary);
        this.programmingLanguage = programmingLanguage;
        this.experienceYears = experienceYears;
    }

    @Override
    public void displayInfo() {
        System.out.println("Programmer: " + getName() + ", Age: " + getAge() + ", Salary: " + getSalary() + ", Language: " + programmingLanguage + ", Experience: " + experienceYears + " years");
    }

    public String getProgrammingLanguage() {
        return programmingLanguage;
    }

    public void setProgrammingLanguage(String programmingLanguage) {
        this.programmingLanguage = programmingLanguage;
    }

    public int getExperienceYears() {
        return experienceYears;
    }

    public void setExperienceYears(int experienceYears) {
        this.experienceYears = experienceYears;
    }
}
class Manager extends Employee {
    private int numberOfSubordinates;
    private String project;

    // Конструктор по умолчанию
    public Manager() {
        super();
        this.numberOfSubordinates = 0;
        this.project = "Unknown";
    }

    public Manager(String name, int age, double salary, int numberOfSubordinates, String project) {
        super(name, age, salary);
        this.numberOfSubordinates = numberOfSubordinates;
        this.project = project;
    }

    @Override
    public void displayInfo() {
        System.out.println("Manager: " + getName() + ", Age: " + getAge() + ", Salary: " + getSalary() + ", Subordinates: " + numberOfSubordinates + ", Project: " + project);
    }

    public int getNumberOfSubordinates() {
        return numberOfSubordinates;
    }

    public void setNumberOfSubordinates(int numberOfSubordinates) {
        this.numberOfSubordinates = numberOfSubordinates;
    }

    public String getProject() {
        return project;
    }

    public void setProject(String project) {
        this.project = project;
    }
}
